Must have рівень: 

Зроби порівняння статичних та динамічних технік тестування. Наведи переваги та можливі обмеження при використанні кожної з них. 



Статистична техніка тестування
Динамічна техніка тестування
Основна інформація
це техніка тестування, при які програмне забезпечення тестується без запуску коду.
це тестування, яке передбачає запуск програмного коду і перевіряється вже, коли код виконується.
Перевага №1
покращує обмін важливої інформації серед команди, що підвищує продуктивність.
розглядає всю функціональність програми.
Перевага №2
результати , отримані в ході цього тестування надають зможу у майбутньому уникнути тих самих проблем.
добре налагоджений процес тестування.
Перевага №3 (і т.д.)
Зменшуються фінансові витрати на виправлення багів через тестування на ранніх стадіях, що дає змогу швидко виправити наявні проблеми.
додаток тестується з точки зору користувача, що підвищує якість ПЗ.
Перевага №4 
виявлення дефектів, які важко знайти при динамічному тестуванні.
виявлення складних помилок, які могли пропустити під час статичного тестування та рев`ю.
Обмеження №1
Займає зазвичай багато часу
Займає багато часу і знаходяться баги вже на більш пізньому етапі розробки ПЗ.
Обмеження №2
Робиться в основному в ручну
Складний процес тестування
Обмеження №3
Перешкоджає виявленню вразливостей, представлених в середовищі виконання.


Висока вартість тестування 
Висновок
Дає можливість поверхневої оцінки правильної функціональності ПЗ, яке дозволяє на ранніх етапах проконтролювати його правильність та відповідність вимог. 
Дає можливість більш глибокої оцінки роботи ПЗ, знаходження складних багів та виправлення їх, аби до користувача дійшов вже готовий та якісний продукт. Мінімізує великі фінансові витрати на перероблення ПЗ через пропуск помилок вже на останніх етапах. 



Середній рівень:

Наступне твердження стосується покриття рішень:
Коли код має одну ‘IF” умову, не має циклів (LOOP)  або перемикачів (CASE), будь-який тест, який ми виконаємо, дасть результат 50% покриття рішень (decision coverage). 

Яке твердження є коректним?
Відповідь: 
b) Коректно. Результат будь-якого тесту умови IF буде або правдими, або ні.  ( на мою думку якщо ( if А>Б)  , а по факту Б більше - це буде false твердження, а якщо А>Б дійсно буде більше Б, тоді це буде true твердження.

Є псевдокод: Switch PC on -> Start MS Word -> IF MS Word starts THEN -> Write a poem -> Close MS Word. 

Скільки тест кейсів знадобиться, щоб перевірити його функціонал? Відповідь: 
2 – для покриття операторів, 2 – для покриття рішень

Скільки потрібно тестів для перевірки тверджень коду:    
Відповідь: 4 ТЕСТИ ПОТРІБНО  
Програма максимум:
Продовжуємо розвивати стартап для застосунку, який дозволяє обмінюватися фотографіями котиків.

Є алгоритм: 
Запитай, якого улюбленця має користувач. 
Якщо користувач відповість, що має кота, то запитай, яка порода його улюбленця: «короткошерста чи довгошерста?»
Якщо клієнт відповість «довгошерста», то запитай: «ви бажаєте отримати контакти найближчого грумера?»
Якщо клієнт відповість «так», то скажи: «Надайте адресу найближчої котячої перукарні»
Інакше
Скажи: «Запропонуй магазин з товарами по догляду за шерстю»
Закінчити
Інакше
Скажи «Запропонуй обрати магазин із зоотоварами»
Закінчити
Якщо клієнт не має кота
Скажи “Коли вирішите завести улюбленця – приходьте”
Закінчити

Завдання:
Намалюй схему алгоритму (в інструменті на вибір, наприклад, у вбудованому Google Docs редакторі, figjam чи miro)
Який потрібен мінімальний набір тест-кейсів, щоб переконатися, що всі запитання були поставлені, всі комбінації були пройдені та всі відповіді були отримані?   
Відповідь:  12

 
